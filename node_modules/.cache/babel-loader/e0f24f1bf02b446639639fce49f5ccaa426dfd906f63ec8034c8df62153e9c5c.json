{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Stack, { stackClasses } from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { textFieldClasses } from '@mui/material/TextField';\nimport { pickersTextFieldClasses } from '@mui/x-date-pickers/PickersTextField';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getChildTypeFromChildName = childName => {\n  if (childName.match(/^([A-Za-z]+)Range(Calendar|Clock)$/)) {\n    return 'multi-panel-UI-view';\n  }\n  if (childName.match(/^([A-Za-z]*)(DigitalClock)$/)) {\n    return 'Tall-UI-view';\n  }\n  if (childName.match(/^Static([A-Za-z]+)/) || childName.match(/^([A-Za-z]+)(Calendar|Clock)$/)) {\n    return 'UI-view';\n  }\n  if (childName.match(/^MultiInput([A-Za-z]+)RangeField$/) || childName.match(/^([A-Za-z]+)RangePicker$/)) {\n    return 'multi-input-range-field';\n  }\n  if (childName.match(/^SingleInput([A-Za-z]+)RangeField$/)) {\n    return 'single-input-range-field';\n  }\n  return 'single-input-field';\n};\nconst getSupportedSectionFromChildName = childName => {\n  if (childName.includes('DateTime')) {\n    return 'date-time';\n  }\n  if (childName.includes('Date')) {\n    return 'date';\n  }\n  return 'time';\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoItem(props) {\n  const {\n    label,\n    children,\n    component,\n    sx: sxProp\n  } = props;\n  let spacing;\n  let sx = sxProp;\n  if (component && getChildTypeFromChildName(component) === 'multi-input-range-field') {\n    spacing = 1.5;\n    sx = _extends({}, sx, {\n      [`& .${textFieldClasses.root}`]: {\n        flexGrow: 1\n      }\n    });\n  } else {\n    spacing = 1;\n  }\n  return /*#__PURE__*/_jsxs(Stack, {\n    direction: \"column\",\n    alignItems: \"stretch\",\n    spacing: spacing,\n    sx: sx,\n    children: [label && /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      children: label\n    }), children]\n  });\n}\nDemoItem.displayName = 'DemoItem';\nconst isDemoItem = child => {\n  if ( /*#__PURE__*/React.isValidElement(child) && typeof child.type !== 'string') {\n    // @ts-ignore\n    return child.type.displayName === 'DemoItem';\n  }\n  return false;\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoContainer(props) {\n  const {\n    children,\n    components,\n    sx: sxProp\n  } = props;\n  const childrenTypes = new Set();\n  const childrenSupportedSections = new Set();\n  components.forEach(childName => {\n    childrenTypes.add(getChildTypeFromChildName(childName));\n    childrenSupportedSections.add(getSupportedSectionFromChildName(childName));\n  });\n  const getSpacing = direction => {\n    if (direction === 'row') {\n      return childrenTypes.has('UI-view') || childrenTypes.has('Tall-UI-view') ? 3 : 2;\n    }\n    return childrenTypes.has('UI-view') ? 4 : 3;\n  };\n  let direction;\n  let spacing;\n  let extraSx = {};\n  let demoItemSx = {};\n  const sx = _extends({\n    overflow: 'auto',\n    // Add padding as overflow can hide the outline text field label.\n    pt: 1\n  }, sxProp);\n  if (components.length > 2 || childrenTypes.has('multi-input-range-field') || childrenTypes.has('single-input-range-field') || childrenTypes.has('multi-panel-UI-view') || childrenTypes.has('UI-view') || childrenSupportedSections.has('date-time')) {\n    direction = 'column';\n    spacing = getSpacing('column');\n  } else {\n    direction = {\n      xs: 'column',\n      lg: 'row'\n    };\n    spacing = {\n      xs: getSpacing('column'),\n      lg: getSpacing('row')\n    };\n  }\n  if (childrenTypes.has('UI-view')) {\n    // noop\n  } else if (childrenTypes.has('single-input-range-field')) {\n    if (!childrenSupportedSections.has('date-time')) {\n      extraSx = {\n        [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n          minWidth: 300\n        }\n      };\n    } else {\n      extraSx = {\n        [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n          minWidth: {\n            xs: 300,\n            // If demo also contains MultiInputDateTimeRangeField, increase width to avoid cutting off the value.\n            md: childrenTypes.has('multi-input-range-field') ? 460 : 400\n          }\n        }\n      };\n    }\n  } else if (childrenSupportedSections.has('date-time')) {\n    extraSx = {\n      [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n        minWidth: 270\n      }\n    };\n    if (childrenTypes.has('multi-input-range-field')) {\n      // increase width for the multi input date time range fields\n      demoItemSx = {\n        [`& > .${stackClasses.root} > .${textFieldClasses.root}, & > .${stackClasses.root} > .${pickersTextFieldClasses.root}`]: {\n          minWidth: 210\n        }\n      };\n    }\n  } else {\n    extraSx = {\n      [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n        minWidth: 200\n      }\n    };\n  }\n  const finalSx = _extends({}, sx, extraSx);\n  return /*#__PURE__*/_jsx(Stack, {\n    direction: direction,\n    spacing: spacing,\n    sx: finalSx,\n    children: React.Children.map(children, child => {\n      if ( /*#__PURE__*/React.isValidElement(child) && isDemoItem(child)) {\n        // Inject sx styles to the `DemoItem` if it is a direct child of `DemoContainer`.\n        // @ts-ignore\n        return /*#__PURE__*/React.cloneElement(child, {\n          sx: _extends({}, extraSx, demoItemSx)\n        });\n      }\n      return child;\n    })\n  });\n}","map":{"version":3,"names":["_extends","React","Stack","stackClasses","Typography","textFieldClasses","pickersTextFieldClasses","jsx","_jsx","jsxs","_jsxs","getChildTypeFromChildName","childName","match","getSupportedSectionFromChildName","includes","DemoItem","props","label","children","component","sx","sxProp","spacing","root","flexGrow","direction","alignItems","variant","displayName","isDemoItem","child","isValidElement","type","DemoContainer","components","childrenTypes","Set","childrenSupportedSections","forEach","add","getSpacing","has","extraSx","demoItemSx","overflow","pt","length","xs","lg","minWidth","md","finalSx","Children","map","cloneElement"],"sources":["/Users/yuentingtse/Documents/ccms/node_modules/@mui/x-date-pickers/internals/demo/DemoContainer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Stack, { stackClasses } from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport { textFieldClasses } from '@mui/material/TextField';\nimport { pickersTextFieldClasses } from '@mui/x-date-pickers/PickersTextField';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getChildTypeFromChildName = childName => {\n  if (childName.match(/^([A-Za-z]+)Range(Calendar|Clock)$/)) {\n    return 'multi-panel-UI-view';\n  }\n  if (childName.match(/^([A-Za-z]*)(DigitalClock)$/)) {\n    return 'Tall-UI-view';\n  }\n  if (childName.match(/^Static([A-Za-z]+)/) || childName.match(/^([A-Za-z]+)(Calendar|Clock)$/)) {\n    return 'UI-view';\n  }\n  if (childName.match(/^MultiInput([A-Za-z]+)RangeField$/) || childName.match(/^([A-Za-z]+)RangePicker$/)) {\n    return 'multi-input-range-field';\n  }\n  if (childName.match(/^SingleInput([A-Za-z]+)RangeField$/)) {\n    return 'single-input-range-field';\n  }\n  return 'single-input-field';\n};\nconst getSupportedSectionFromChildName = childName => {\n  if (childName.includes('DateTime')) {\n    return 'date-time';\n  }\n  if (childName.includes('Date')) {\n    return 'date';\n  }\n  return 'time';\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoItem(props) {\n  const {\n    label,\n    children,\n    component,\n    sx: sxProp\n  } = props;\n  let spacing;\n  let sx = sxProp;\n  if (component && getChildTypeFromChildName(component) === 'multi-input-range-field') {\n    spacing = 1.5;\n    sx = _extends({}, sx, {\n      [`& .${textFieldClasses.root}`]: {\n        flexGrow: 1\n      }\n    });\n  } else {\n    spacing = 1;\n  }\n  return /*#__PURE__*/_jsxs(Stack, {\n    direction: \"column\",\n    alignItems: \"stretch\",\n    spacing: spacing,\n    sx: sx,\n    children: [label && /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      children: label\n    }), children]\n  });\n}\nDemoItem.displayName = 'DemoItem';\nconst isDemoItem = child => {\n  if ( /*#__PURE__*/React.isValidElement(child) && typeof child.type !== 'string') {\n    // @ts-ignore\n    return child.type.displayName === 'DemoItem';\n  }\n  return false;\n};\n/**\n * WARNING: This is an internal component used in documentation to achieve a desired layout.\n * Please do not use it in your application.\n */\nexport function DemoContainer(props) {\n  const {\n    children,\n    components,\n    sx: sxProp\n  } = props;\n  const childrenTypes = new Set();\n  const childrenSupportedSections = new Set();\n  components.forEach(childName => {\n    childrenTypes.add(getChildTypeFromChildName(childName));\n    childrenSupportedSections.add(getSupportedSectionFromChildName(childName));\n  });\n  const getSpacing = direction => {\n    if (direction === 'row') {\n      return childrenTypes.has('UI-view') || childrenTypes.has('Tall-UI-view') ? 3 : 2;\n    }\n    return childrenTypes.has('UI-view') ? 4 : 3;\n  };\n  let direction;\n  let spacing;\n  let extraSx = {};\n  let demoItemSx = {};\n  const sx = _extends({\n    overflow: 'auto',\n    // Add padding as overflow can hide the outline text field label.\n    pt: 1\n  }, sxProp);\n  if (components.length > 2 || childrenTypes.has('multi-input-range-field') || childrenTypes.has('single-input-range-field') || childrenTypes.has('multi-panel-UI-view') || childrenTypes.has('UI-view') || childrenSupportedSections.has('date-time')) {\n    direction = 'column';\n    spacing = getSpacing('column');\n  } else {\n    direction = {\n      xs: 'column',\n      lg: 'row'\n    };\n    spacing = {\n      xs: getSpacing('column'),\n      lg: getSpacing('row')\n    };\n  }\n  if (childrenTypes.has('UI-view')) {\n    // noop\n  } else if (childrenTypes.has('single-input-range-field')) {\n    if (!childrenSupportedSections.has('date-time')) {\n      extraSx = {\n        [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n          minWidth: 300\n        }\n      };\n    } else {\n      extraSx = {\n        [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n          minWidth: {\n            xs: 300,\n            // If demo also contains MultiInputDateTimeRangeField, increase width to avoid cutting off the value.\n            md: childrenTypes.has('multi-input-range-field') ? 460 : 400\n          }\n        }\n      };\n    }\n  } else if (childrenSupportedSections.has('date-time')) {\n    extraSx = {\n      [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n        minWidth: 270\n      }\n    };\n    if (childrenTypes.has('multi-input-range-field')) {\n      // increase width for the multi input date time range fields\n      demoItemSx = {\n        [`& > .${stackClasses.root} > .${textFieldClasses.root}, & > .${stackClasses.root} > .${pickersTextFieldClasses.root}`]: {\n          minWidth: 210\n        }\n      };\n    }\n  } else {\n    extraSx = {\n      [`& > .${textFieldClasses.root}, & > .${pickersTextFieldClasses.root}`]: {\n        minWidth: 200\n      }\n    };\n  }\n  const finalSx = _extends({}, sx, extraSx);\n  return /*#__PURE__*/_jsx(Stack, {\n    direction: direction,\n    spacing: spacing,\n    sx: finalSx,\n    children: React.Children.map(children, child => {\n      if ( /*#__PURE__*/React.isValidElement(child) && isDemoItem(child)) {\n        // Inject sx styles to the `DemoItem` if it is a direct child of `DemoContainer`.\n        // @ts-ignore\n        return /*#__PURE__*/React.cloneElement(child, {\n          sx: _extends({}, extraSx, demoItemSx)\n        });\n      }\n      return child;\n    })\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}